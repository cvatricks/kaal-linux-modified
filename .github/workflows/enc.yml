name: SB Upload Bot [Kaali]

on:
    push:
    workflow_dispatch:
    schedule:
      - cron: '0 */6 * * *'
    
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
       - name: checkout kaali-linux
         uses: actions/checkout@main
       
       - uses: styfle/cancel-workflow-action@0.9.0
         name: "cancel duplicate workflow runs"
         with:
            workflow_id: .github/workflows/enc.yml
            access_token: ${{ github.token }}
       - name: initialization kaali-linux
         continue-on-error: true
         run: |
           git config --global user.name ${{ secrets.GIT_NAME }}
           git config --global user.email ${{ secrets.GIT_EMAIL }}
           git config --global credential.helper store
           echo "https://${{ secrets.GIT_NAME }}:${{ secrets.GIT_TOKEN }}@github.com" > ~/.git-credentials
       - name: cloning repository
         continue-on-error: true
         run: |
           git clone -b V1.0 https://${{ secrets.GIT_NAME }}:${{ secrets.GIT_TOKEN }}@github.com/cvatricks/sburluploadbot kaali
       - name: Install & upgrade ffmpeg
         continue-on-error: true
         run: |
           indent() {
              sed -u 's/^/       /'
           }
           echo "-----> Install ffmpeg"
           BUILD_DIR=$1
           VENDOR_DIR="vendor"
           DOWNLOAD_URL="https://s3-us-west-1.amazonaws.com/kitcast/cdn/ffmpeg-release-64bit-static.tar.xz"
           echo "DOWNLOAD_URL = " $DOWNLOAD_URL | sudo indent
           cd $BUILD_DIR
           sudo mkdir -p $VENDOR_DIR
           cd $VENDOR_DIR
           sudo curl -L --silent $DOWNLOAD_URL | sudo tar -Jx
           echo "exporting PATH" | sudo indent
           PROFILE_PATH="$BUILD_DIR/.profile.d/ffmpeg.sh"
           sudo mkdir -p $(dirname $PROFILE_PATH)
           echo 'export PATH="$PATH:vendor/ffmpeg-3.4.2-64bit-static"' >> $PROFILE_PATH
       - name: running kaali-linux server
         timeout-minutes: 44640
         continue-on-error: true
         run: |
           cd kaali
           docker build -q . -t kaali
           docker run kaali
       #- name: loop kaali-linux server
       #  continue-on-error: true
       #  run: |
       #       git clone https://github.com/${GITHUB_REPOSITORY} loop
       #       cd loop || exit 1
       #       echo $(date -u +%T%P) >> loop.txt
       #       git add loop.txt
       #       git commit -m "Kaali-Linux : Loop $(date -u +%D-%T%P)"
       #       git push -q https://${{ secrets.GIT_TOKEN }}@github.com/${GITHUB_REPOSITORY} HEAD:kaali-linux


